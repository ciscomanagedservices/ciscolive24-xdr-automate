{
  "workflow": {
    "unique_name": "definition_workflow_02DEI3NKGXHQI5FR47yEWTRtWIcuLJgdfti",
    "name": "Tool - Update XDR Incident",
    "title": "Tool - Update XDR Incident",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "o_message_content",
          "type": "datatype.string",
          "description": "Response from XDR to adding a note to an incident, 'true' indicates success, 'false' indicates failure",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02DEI64PZ0SZY6dL8B2pKFt4FNBsN1qEzay",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "i_incident_id",
          "type": "datatype.string",
          "description": "Incident reference in XDR",
          "is_required": true,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02DEI5GAM73MM0BIVu1tbF0LFbYPXoAF749",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "n/a",
          "scope": "input",
          "name": "i_run_id",
          "type": "datatype.string",
          "description": "run_id from parent agent. ",
          "is_required": true,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02EK3ZGSD75G01ENUALDMG9lzm3aKZwIyZw",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "i_note_content",
          "type": "datatype.string",
          "description": "Note to add to the XDR incident worklog. \nNote should be in markdown format. Recommend to use the following format:\n### Incident Update - \u003cstate\u003e ### \n### Executive Summary: ### \n\u003cParagraph of high level summary of issue \u003e\n\n### Investigation Details: ### \n\u003cdetails of analysis in bullet points and/or preformatted text blocks\u003e\n\n### Supporting Evidence: ### \n\u003cOptional but recommended - include logs or api outputs in readable format\u003e\n\n### Next Steps: ### \n\u003cnext steps as bulleted or numbered list\u003e",
          "is_required": true,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02DEKZR1KDLLG1WmjKaK6IrbSa3NbJUHW7y",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.boolean",
        "properties": {
          "value": true,
          "scope": "input",
          "name": "l_enhance_inc_update",
          "type": "datatype.boolean",
          "description": "If true, enhances the incident update by using another LLM call",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02EK414HUEKMM7fugmJBt4swzKhIFUwz3aQ",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "delete_workflow_instance": false,
      "description": "This workflow adds a note to an XDR incident worklog.",
      "display_name": "Tool - Update XDR Incident",
      "runtime_user": {
        "target_default": true
      },
      "target": {
        "execute_on_target_group": true,
        "target_group": {
          "target_group_id": "target_group_01HLKTH50I3ZU5IfL3dwQos38eRFcE5gYjM",
          "run_on_all_targets": false,
          "selected_target_types": [
            "web-service.endpoint"
          ],
          "use_criteria": {
            "choose_target_using_algorithm": "choose_first_with_matching_criteria",
            "conditions": [
              {
                "operator": "eq",
                "left_operand": "$targetgroup.web-service endpoint.input.display_name$",
                "right_operand": "Automation APIs"
              }
            ]
          }
        }
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_02DHY9S7R8G9R6ItkTkBq7vNMbJuxVV4CGQ",
        "name": "Execute Python Script",
        "title": "Ensure ID is prefixed with incident-",
        "type": "python3.script",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "display_name": "Ensure ID is prefixed with incident-",
          "script": "import sys\n\ninc_id = sys.argv[1]\nif not inc_id.startswith('incident-'):\n   inc_id = 'incident-' + inc_id",
          "script_arguments": [
            "$workflow.definition_workflow_02DEI3NKGXHQI5FR47yEWTRtWIcuLJgdfti.input.variable_workflow_02DEI5GAM73MM0BIVu1tbF0LFbYPXoAF749$"
          ],
          "script_queries": [
            {
              "script_query": "inc_id",
              "script_query_name": "inc_id",
              "script_query_type": "string"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02EK4196APS2Z0vjRewMO2mBt09mcU4SyPh",
        "name": "Group",
        "title": "LLM Enhance Incident Update",
        "type": "logic.group",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "Enhances certain incident updates with an additional LLM call",
          "display_name": "LLM Enhance Incident Update",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02EK41YBC1NRN1bSEB8maRElZkF50izIE3f",
            "name": "Condition Block",
            "title": "Condition Block",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Condition Block",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_02EK41YBS7U7W5g6nbFD3AVGHo58pWA85f0",
                "name": "Condition Branch",
                "title": "l_enhance_inc_update==true",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": {
                      "left_operand": "$workflow.definition_workflow_02DEI3NKGXHQI5FR47yEWTRtWIcuLJgdfti.input.variable_workflow_02EK3ZGSD75G01ENUALDMG9lzm3aKZwIyZw$",
                      "operator": "ne",
                      "right_operand": "n/a"
                    },
                    "operator": "and",
                    "right_operand": {
                      "left_operand": "$workflow.definition_workflow_02DEI3NKGXHQI5FR47yEWTRtWIcuLJgdfti.input.variable_workflow_02EK414HUEKMM7fugmJBt4swzKhIFUwz3aQ$",
                      "operator": "eq",
                      "right_operand": true
                    }
                  },
                  "continue_on_failure": false,
                  "display_name": "l_enhance_inc_update==true",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02EK44X9PZ2Y923uiZVAFdYHx7SjgIsKSRF",
                    "name": "HTTP Request",
                    "title": "Get Parent WF l_messages",
                    "type": "web-service.http_request",
                    "base_type": "activity",
                    "properties": {
                      "accept": "application/json",
                      "action_timeout": 180,
                      "allow_auto_redirect": true,
                      "allow_headers_redirect": false,
                      "content_type": "application/json",
                      "continue_on_error_status_code": false,
                      "continue_on_failure": true,
                      "description": "Uses API to get the l_messages from the parent workflow",
                      "display_name": "Get Parent WF l_messages",
                      "method": "GET",
                      "relative_url": "/api/v1/instances/$workflow.definition_workflow_02DEI3NKGXHQI5FR47yEWTRtWIcuLJgdfti.input.variable_workflow_02EK3ZGSD75G01ENUALDMG9lzm3aKZwIyZw$",
                      "runtime_user": {
                        "target_default": true
                      },
                      "skip_execution": false,
                      "target": {
                        "use_workflow_target_group": true
                      }
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02EK46JKB6HPP5wBxh26UR7rPJ75UI1XGHa",
                    "name": "JSONPath Query",
                    "title": "Parse out l_messages",
                    "type": "corejava.jsonpathquery",
                    "base_type": "activity",
                    "properties": {
                      "action_timeout": 180,
                      "continue_on_failure": true,
                      "display_name": "Parse out l_messages",
                      "input_json": "$activity.definition_activity_02EK44X9PZ2Y923uiZVAFdYHx7SjgIsKSRF.output.response_body$",
                      "jsonpath_queries": [
                        {
                          "jsonpath_query": ".variables[?(@.properties.name=='l_messages')].properties.value",
                          "jsonpath_query_name": "l_messages",
                          "jsonpath_query_type": "string",
                          "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                        }
                      ],
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02EK477B6524C3q4CRexz8qtLCPLMysdl7L",
                    "name": "Execute Python Script",
                    "title": "Create LLM prompt",
                    "type": "python3.script",
                    "base_type": "activity",
                    "properties": {
                      "action_timeout": 180,
                      "continue_on_failure": true,
                      "display_name": "Create LLM prompt",
                      "script": "import json\nimport sys\nl_messages = sys.argv[1]\ni_note_content = sys.argv[2]\n\n\nsystem_prompt = \"\"\"\nAct as an escalation level IT Security Operations investigator AI Agent. Review the AI agent generated content and history, then generate a more thorough and enhanced update note of the same state.  The update is about the security incident, NOT the AI agent collecting data. Only return the updated note. Do not change the incident state in your created output. Use markdown format:\n### Incident Update - \u003cstate\u003e ### \n### Executive Summary: ### \n\u003c\u003e\n### Investigation Details: ### \n\u003c\u003e\n\n### Supporting Evidence: ### \n\u003cOptional but recommended - include logs or api outputs in readable format\u003e\n\n### Next Steps: ###\n\"\"\"\n\nmessage_format = [\n    {\n        \"role\": \"system\",\n        \"content\": f\"{system_prompt}\",\n    },\n    {\n        \"role\": \"user\",\n        \"content\": f\"Original Update Content: {i_note_content}  \\n\\nMessage History:{l_messages}\",\n    },\n]\n\noutput_json = json.dumps(message_format)",
                      "script_arguments": [
                        "$activity.definition_activity_02EK46JKB6HPP5wBxh26UR7rPJ75UI1XGHa.output.jsonpath_queries.l_messages$",
                        "$workflow.definition_workflow_02DEI3NKGXHQI5FR47yEWTRtWIcuLJgdfti.input.variable_workflow_02DEKZR1KDLLG1WmjKaK6IrbSa3NbJUHW7y$"
                      ],
                      "script_queries": [
                        {
                          "script_query": "output_json",
                          "script_query_name": "output_json",
                          "script_query_type": "string"
                        }
                      ],
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02EK4BP9WI1UP3i59krySk2zfeDQpkCAwdl",
                    "name": "OpenAI Chat Completion",
                    "title": "OpenAI Chat Completion",
                    "type": "workflow.sub_workflow",
                    "base_type": "subworkflow",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "OpenAI Chat Completion",
                      "input": {
                        "variable_workflow_02DCPFF9V1FW04KATEfsyPF6ieCB6arYreD": "gpt-4o",
                        "variable_workflow_02DCPG9XUFVXL1LuTteFioSWzi1yPNRlBzp": "$activity.definition_activity_02EK477B6524C3q4CRexz8qtLCPLMysdl7L.output.script_queries.output_json$",
                        "variable_workflow_02DCPGTLVZGAS7aR4bIIOVtW8NIun8YbFmR": "0.9",
                        "variable_workflow_02DCPKDU1XY3B2TGa0NL8Pv0Q5A8tkVXdKF": "[]",
                        "variable_workflow_02DCPLMRWZQT71EMCd4SD9wzijc97Pw3NlN": "{ \"type\": \"text\" }",
                        "variable_workflow_02DCWAP5RWCYV3GWvXD2cTbSUsIB0Hwr6WW": true,
                        "variable_workflow_02EBOGFELFN6Y4IUaH3pwdRyaQokyBx48pA": "$global.variable_02DUMK8K43IAG0uHmn2VaCdmI0yYCQoromA.global.variable_02DUMK8K43IAG0uHmn2VaCdmI0yYCQoromA$",
                        "variable_workflow_02EBOQW9VRT3V62DGLqVA5MOU0EmGWLJQaR": "api.openai.com"
                      },
                      "runtime_user": {
                        "target_default": true
                      },
                      "skip_execution": false,
                      "target": {
                        "execute_on_this_target_group": true,
                        "target_group_id": "target_group_02EBOJDJPU5TC3pSXJVlVFlkbm7Onze3GGY"
                      },
                      "workflow_id": "definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk",
                      "workflow_name": "OpenAI Chat Completion"
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02EK4CU11L6B663RevotI2rdr8C7ku7g7Kq",
                    "name": "Set Variables",
                    "title": "Set i_note_content",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": true,
                      "display_name": "Set i_note_content",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_02DEI3NKGXHQI5FR47yEWTRtWIcuLJgdfti.input.variable_workflow_02DEKZR1KDLLG1WmjKaK6IrbSa3NbJUHW7y$",
                          "variable_value_new": "$activity.definition_activity_02EK4BP9WI1UP3i59krySk2zfeDQpkCAwdl.output.variable_workflow_02DEFQ4NLZK706z1Diu44THwhJjav8caCfr$"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_02DF8NCZ0Z7UJ5l5rTIwlZ5J8W9e5lwD8x5",
        "name": "XDR - Incident - Add Note to Incident",
        "title": "XDR - Incident - Add Note to Incident",
        "type": "workflow.atomic_workflow",
        "base_type": "subworkflow",
        "properties": {
          "continue_on_failure": false,
          "display_name": "XDR - Incident - Add Note to Incident",
          "input": {
            "variable_workflow_024S5ENDMV7U40d5sa42VGtpZv9CTZMeTIX": "",
            "variable_workflow_024S5ENDMVXZ31psugTUnbhgMZ3ZmRcH81t": "",
            "variable_workflow_024S5ENDMW51N6TOFwN7GJI8YS2dcIHkBFc": "default",
            "variable_workflow_024S5ENDMWBJB5BFlu4J4nDGhkW3bb3aldL": "$workflow.definition_workflow_02DEI3NKGXHQI5FR47yEWTRtWIcuLJgdfti.input.variable_workflow_02DEKZR1KDLLG1WmjKaK6IrbSa3NbJUHW7y$",
            "variable_workflow_024S5GHPEMVDB7WZ7t3q51GjinVqEJhzWNS": "automation",
            "variable_workflow_028YMMZWJMEPM1LibBvBFYGnNS9gieKXW08": "https://private.intel.amp.cisco.com:443/ctia/incident/$activity.definition_activity_02DHY9S7R8G9R6ItkTkBq7vNMbJuxVV4CGQ.output.script_queries.inc_id$"
          },
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "override_workflow_target": true,
            "target_id": "$module_target;Cisco XDR;securex:ao:iroh_api$",
            "target_type": "web-service.endpoint"
          },
          "workflow_id": "definition_workflow_024S5ENDCK1LP5V2CLbAh3WWV20RHOHieks",
          "workflow_name": "XDR - Incident - Add Note to Incident"
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02DEI54NKM5S63yXEp5gjQYrCaZ2aJr7pOa",
        "name": "Set Variables",
        "title": "Success?",
        "type": "core.set_multiple_variables",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Success?",
          "skip_execution": false,
          "variables_to_update": [
            {
              "variable_to_update": "$workflow.definition_workflow_02DEI3NKGXHQI5FR47yEWTRtWIcuLJgdfti.output.variable_workflow_02DEI64PZ0SZY6dL8B2pKFt4FNBsN1qEzay$",
              "variable_value_new": "$activity.definition_activity_02DF8NCZ0Z7UJ5l5rTIwlZ5J8W9e5lwD8x5.output.succeeded$"
            }
          ]
        },
        "object_type": "definition_activity"
      }
    ],
    "categories": [
      "category_025W2J2HK90LP3gVw454IoXQ0Qd1anzcY85",
      "category_02DEF0IUE5ZGA1PNJIWf3PYyD9AoM3jr4Si"
    ]
  },
  "categories": {
    "category_025W2J2HK90LP3gVw454IoXQ0Qd1anzcY85": {
      "unique_name": "category_025W2J2HK90LP3gVw454IoXQ0Qd1anzcY85",
      "name": "CLUS24",
      "title": "CLUS24",
      "type": "basic.category",
      "base_type": "category",
      "description": "Workflows \u0026 Atomic Actions for Cisco Live 2024 Session BRKATO-1557: Automating Detection \u0026 Response Outcomes using Cisco XDR and Generative AI",
      "category_type": "custom",
      "object_type": "category"
    },
    "category_02DEF0IUE5ZGA1PNJIWf3PYyD9AoM3jr4Si": {
      "unique_name": "category_02DEF0IUE5ZGA1PNJIWf3PYyD9AoM3jr4Si",
      "name": "XDR_AI_Agent_Tool",
      "title": "XDR_AI_Agent_Tool",
      "type": "basic.category",
      "base_type": "category",
      "category_type": "custom",
      "object_type": "category"
    }
  },
  "target_groups": {
    "target_group_02EBOJDJPU5TC3pSXJVlVFlkbm7Onze3GGY": {
      "unique_name": "target_group_02EBOJDJPU5TC3pSXJVlVFlkbm7Onze3GGY",
      "name": "HTTP Targets",
      "title": "HTTP Targets",
      "type": "generic.target_group",
      "base_type": "target_group",
      "version": "1.0.0",
      "targets": [
        {
          "data_target_type": "web-service.endpoint",
          "view_target_type": "web-service.endpoint",
          "include_all_targets": true
        }
      ],
      "object_type": "target_group"
    }
  },
  "variables": {
    "variable_02DUMK8K43IAG0uHmn2VaCdmI0yYCQoromA": {
      "unique_name": "variable_02DUMK8K43IAG0uHmn2VaCdmI0yYCQoromA",
      "properties": {
        "value": "*****",
        "scope": "global",
        "name": "api.openai.com api token",
        "type": "datatype.secure_string",
        "description": "(scdozier) openai token",
        "is_required": false,
        "display_on_wizard": false,
        "is_invisible": false
      },
      "object_type": "variable"
    }
  },
  "subworkflows": [
    {
      "workflow": {
        "unique_name": "definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk",
        "name": "OpenAI Chat Completion",
        "title": "OpenAI Chat Completion",
        "type": "generic.workflow",
        "base_type": "workflow",
        "variables": [
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "[]",
              "scope": "input",
              "name": "i_tools",
              "type": "datatype.string",
              "description": "A list of tools the model may call in JSON. Max of 128 tools",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02DCPKDU1XY3B2TGa0NL8Pv0Q5A8tkVXdKF",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "o_message_content",
              "type": "datatype.string",
              "description": "The message content in the AI response",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02DEFQ4NLZK706z1Diu44THwhJjav8caCfr",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "[\n        {\n            \"role\": \"system\",\n            \"content\": \"You are an AI assistant. Provide results in JSON format.\"\n        }\n]",
              "scope": "input",
              "name": "i_messages",
              "type": "datatype.string",
              "description": "A list of messages in conversation so far as json",
              "is_required": true,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02DCPG9XUFVXL1LuTteFioSWzi1yPNRlBzp",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "CX OpenAI",
              "scope": "input",
              "name": "i_openai_http_target_name",
              "type": "datatype.string",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02EBOQW9VRT3V62DGLqVA5MOU0EmGWLJQaR",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "o_messages",
              "type": "datatype.string",
              "description": "The message history which will include the i_messages and most recent response",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02DCPN2FUT0KQ6n4jufZaE0ssnsWAoPXR5V",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "gpt-4-turbo",
              "scope": "input",
              "name": "i_model",
              "type": "datatype.string",
              "description": "LLM Model to be used",
              "is_required": false,
              "display_on_wizard": true,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02DCPFF9V1FW04KATEfsyPF6ieCB6arYreD",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "[]",
              "scope": "output",
              "name": "o_tool_calls",
              "type": "datatype.string",
              "description": "The tool calls from the response message",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02DEFGKNLMAM71HyjMMILdjCi0ZAd7aScKf",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.secure_string",
            "properties": {
              "value": "",
              "scope": "input",
              "name": "i_openai_api_token",
              "type": "datatype.secure_string",
              "description": "The api bearer token",
              "is_required": true,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02EBOGFELFN6Y4IUaH3pwdRyaQokyBx48pA",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "0.9",
              "scope": "input",
              "name": "i_temperature",
              "type": "datatype.string",
              "description": "What sampling temperature to use between 0 and 2",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02DCPGTLVZGAS7aR4bIIOVtW8NIun8YbFmR",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.integer",
            "properties": {
              "value": 30,
              "scope": "local",
              "name": "l_seconds_between_retries",
              "type": "datatype.integer",
              "description": "Maximum number of seconds between retry attempts. ",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02EK4JM1T6LQ11pN82CxaX1RDHOkegZzhyh",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.integer",
            "properties": {
              "value": 1,
              "scope": "local",
              "name": "l_openai_retries",
              "type": "datatype.integer",
              "description": "Determines the number of retry attempts made to OpenAI",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02EK4JATH9EHF2PSKigI7bWK66u6IYft759",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "o_chat_completion",
              "type": "datatype.string",
              "description": "The chat completion object in json",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02DCPMAP4B9XD4FH9ngx5kjgjV2QG1NlpcM",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "o_choices",
              "type": "datatype.string",
              "description": "The choices list from the chat completion object",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02DCPMJFLMUOH6MSDxfYhwS5m2mMBIjsGCb",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.boolean",
            "properties": {
              "value": true,
              "scope": "input",
              "name": "i_return_messages_history",
              "type": "datatype.boolean",
              "description": "If true, appends the messages response to i_messages for the value of o_messages",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02DCWAP5RWCYV3GWvXD2cTbSUsIB0Hwr6WW",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "{ \"type\": \"text\" }",
              "scope": "input",
              "name": "i_response_format",
              "type": "datatype.string",
              "description": "Specifies the format the model must output. { \"type\": \"json_object\" } or { \"type\": \"text\" }",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02DCPLMRWZQT71EMCd4SD9wzijc97Pw3NlN",
            "object_type": "variable_workflow"
          }
        ],
        "properties": {
          "atomic": {
            "is_atomic": false
          },
          "delete_workflow_instance": false,
          "description": "Executes a call to the OpenAI chat completion API",
          "display_name": "OpenAI Chat Completion",
          "runtime_user": {
            "target_default": true
          },
          "target": {
            "execute_on_target_group": true,
            "target_group": {
              "target_group_id": "target_group_02EBOJDJPU5TC3pSXJVlVFlkbm7Onze3GGY",
              "run_on_all_targets": false,
              "selected_target_types": [
                "web-service.endpoint"
              ],
              "use_criteria": {
                "choose_target_using_algorithm": "choose_first_with_matching_criteria",
                "conditions": [
                  {
                    "operator": "eqi",
                    "left_operand": "$targetgroup.web-service endpoint.input.display_name$",
                    "right_operand": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02EBOQW9VRT3V62DGLqVA5MOU0EmGWLJQaR$"
                  }
                ]
              }
            }
          }
        },
        "object_type": "definition_workflow",
        "actions": [
          {
            "unique_name": "definition_activity_02DCVSTR1ZEIQ2Uqo6eOKKodTJi4eaQJG5h",
            "name": "Execute Python Script",
            "title": "Build Request Body",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "display_name": "Build Request Body",
              "script": "import json\n\njson_body =r'''{\n    \"model\": \"$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02DCPFF9V1FW04KATEfsyPF6ieCB6arYreD$\",\n    \"temperature\": $workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02DCPGTLVZGAS7aR4bIIOVtW8NIun8YbFmR$,\n    \"stream\": false,\n    \"tools\": $workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02DCPKDU1XY3B2TGa0NL8Pv0Q5A8tkVXdKF$,\n    \"response_format\": $workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02DCPLMRWZQT71EMCd4SD9wzijc97Pw3NlN$,\n    \"messages\": $workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02DCPG9XUFVXL1LuTteFioSWzi1yPNRlBzp$\n}'''\n\n# Fix for https://github.com/microsoft/semantic-kernel/issues/4447\njson_body = json_body.replace('multi_tool_use.parallel','parallel')\n\nbody = json.loads(json_body)\n\nif not body['tools']:\n  body.pop('tools')\n\njson_body = json.dumps(body)\n",
              "script_queries": [
                {
                  "script_query": "json_body",
                  "script_query_name": "json_body",
                  "script_query_type": "string"
                }
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02EK4HZB16U6S53Fo4wLR1T1rB6GzsYYqcM",
            "name": "While Loop",
            "title": "While Loop",
            "type": "logic.while",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "While Loop",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_02EK4HZBI0G5U4tZbfQ4hDoBTHoPwfyQ6id",
                "name": "Condition Branch",
                "title": "If l_openai_retries \u003e= 0",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.local.variable_workflow_02EK4JATH9EHF2PSKigI7bWK66u6IYft759$",
                    "operator": "gte",
                    "right_operand": 0
                  },
                  "continue_on_failure": false,
                  "display_name": "If l_openai_retries \u003e= 0",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02DCPN7ZMSHE53mGIST66lLNvtvPIiH2u2f",
                    "name": "HTTP Request",
                    "title": "Chat Completion Request",
                    "type": "web-service.http_request",
                    "base_type": "activity",
                    "properties": {
                      "action_timeout": 300,
                      "allow_auto_redirect": true,
                      "allow_headers_redirect": false,
                      "body": "$activity.definition_activity_02DCVSTR1ZEIQ2Uqo6eOKKodTJi4eaQJG5h.output.script_queries.json_body$",
                      "content_type": "application/json",
                      "continue_on_error_status_code": false,
                      "continue_on_failure": false,
                      "custom_headers": [
                        {
                          "name": "Authorization",
                          "value": "Bearer $workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02EBOGFELFN6Y4IUaH3pwdRyaQokyBx48pA$"
                        }
                      ],
                      "description": "Creates a model response for the given chat conversation via OpenAI REST Chat Completion \n\n",
                      "display_name": "Chat Completion Request",
                      "method": "POST",
                      "relative_url": "/chat/completions",
                      "runtime_user": {
                        "target_default": true
                      },
                      "skip_execution": false,
                      "target": {
                        "use_workflow_target_group": true
                      }
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02EK4K4HE0Q6Y3sMqhEU26r2OEsQlObSt9l",
                    "name": "Condition Block",
                    "title": "Condition Block",
                    "type": "logic.if_else",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Condition Block",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "blocks": [
                      {
                        "unique_name": "definition_activity_02EK4K4HU5G5L7eSZiNsbk5WK4jh4H1NVHs",
                        "name": "Condition Branch",
                        "title": "OpenAi Request Succeeded",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": "$activity.definition_activity_02DCPN7ZMSHE53mGIST66lLNvtvPIiH2u2f.output.succeeded$",
                            "operator": "eq",
                            "right_operand": true
                          },
                          "continue_on_failure": false,
                          "display_name": "OpenAi Request Succeeded",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02EK4MFUUEX1P3atqXfvR1Wp5GHAC2Pqu3B",
                            "name": "Set Variables",
                            "title": "Set retries = -1",
                            "type": "core.set_multiple_variables",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "display_name": "Set retries = -1",
                              "skip_execution": false,
                              "variables_to_update": [
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.local.variable_workflow_02EK4JATH9EHF2PSKigI7bWK66u6IYft759$",
                                  "variable_value_new": -1
                                }
                              ]
                            },
                            "object_type": "definition_activity"
                          },
                          {
                            "unique_name": "definition_activity_02DCW7FZETHQJ1IU7w4j5nl2awW6T5Uj40C",
                            "name": "Execute Python Script",
                            "title": "Process Response",
                            "type": "python3.script",
                            "base_type": "activity",
                            "properties": {
                              "action_timeout": 180,
                              "continue_on_failure": false,
                              "display_name": "Process Response",
                              "script": "import json\nimport sys\n\ndef contains_true_or_false(input_string):\n    if 'true' in input_string.lower():\n        return True\n    elif 'false' in input_string.lower():\n        return False\n    else:\n        # Handle the case where neither 'true' nor 'false' is found\n        # You can return a default value or raise an exception\n        raise ValueError(\"The input string does not contain 'true' or 'false'.\")\n\ni_messages = sys.argv[1]\nresponse_body_json = sys.argv[2]\nappend_messages = sys.argv[3]\n\n# Export the message from the response\nresp = json.loads(response_body_json)\no_choices = json.dumps(resp.get('choices'))\nresp = resp.get('choices')[0].get('message')\n\n# Export out the mesage content\nif resp['content']:\n    o_message_content = resp['content']\nelse:\n    o_message_content = ''\n\n# If there is a tool_call in the message, export that too\nif 'tool_calls' in resp and resp['tool_calls']:\n    o_tool_calls = json.dumps(resp['tool_calls'])\nelse:\n    o_tool_calls = json.dumps('[]')\n\n# Now export the message to be used for chat history\n# OpenAI doesn't like you sending null messages array, must be empty string\nfor key in [\"tool_calls\", \"function_call\"]:\n    if resp.get(key) is None:\n        resp.pop(key, None)\n\nfor key, value in resp.items():\n    if value is None:\n        resp[key] = ''\n\nif contains_true_or_false(append_messages):\n    o_messages = json.loads(i_messages)\n    o_messages.append(resp)\nelse:\n    o_messages = resp  # Assign the dictionary directly if not appending\n\no_messages = json.dumps(o_messages)  # Convert the final result to a JSON string",
                              "script_arguments": [
                                "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02DCPG9XUFVXL1LuTteFioSWzi1yPNRlBzp$",
                                "$activity.definition_activity_02DCPN7ZMSHE53mGIST66lLNvtvPIiH2u2f.output.response_body$",
                                "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02DCWAP5RWCYV3GWvXD2cTbSUsIB0Hwr6WW$"
                              ],
                              "script_queries": [
                                {
                                  "script_query": "o_messages",
                                  "script_query_name": "o_messages",
                                  "script_query_type": "string"
                                },
                                {
                                  "script_query": "o_choices",
                                  "script_query_name": "o_choices",
                                  "script_query_type": "string"
                                },
                                {
                                  "script_query": "o_tool_calls",
                                  "script_query_name": "o_tool_calls",
                                  "script_query_type": "string"
                                },
                                {
                                  "script_query": "o_message_content",
                                  "script_query_name": "o_message_content",
                                  "script_query_type": "string"
                                }
                              ],
                              "skip_execution": false
                            },
                            "object_type": "definition_activity"
                          },
                          {
                            "unique_name": "definition_activity_02DCW885WILJU6FCUJlDpBVTXw7oolJo2PE",
                            "name": "Set Variables",
                            "title": "Set Variables",
                            "type": "core.set_multiple_variables",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "display_name": "Set Variables",
                              "skip_execution": false,
                              "variables_to_update": [
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.output.variable_workflow_02DCPMAP4B9XD4FH9ngx5kjgjV2QG1NlpcM$",
                                  "variable_value_new": "$activity.definition_activity_02DCPN7ZMSHE53mGIST66lLNvtvPIiH2u2f.output.response_body$"
                                },
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.output.variable_workflow_02DCPMJFLMUOH6MSDxfYhwS5m2mMBIjsGCb$",
                                  "variable_value_new": "$activity.definition_activity_02DCW7FZETHQJ1IU7w4j5nl2awW6T5Uj40C.output.script_queries.o_choices$"
                                },
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.output.variable_workflow_02DCPN2FUT0KQ6n4jufZaE0ssnsWAoPXR5V$",
                                  "variable_value_new": "$activity.definition_activity_02DCW7FZETHQJ1IU7w4j5nl2awW6T5Uj40C.output.script_queries.o_messages$"
                                },
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.output.variable_workflow_02DEFQ4NLZK706z1Diu44THwhJjav8caCfr$",
                                  "variable_value_new": "$activity.definition_activity_02DCW7FZETHQJ1IU7w4j5nl2awW6T5Uj40C.output.script_queries.o_message_content$"
                                },
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.output.variable_workflow_02DEFGKNLMAM71HyjMMILdjCi0ZAd7aScKf$",
                                  "variable_value_new": "$activity.definition_activity_02DCW7FZETHQJ1IU7w4j5nl2awW6T5Uj40C.output.script_queries.o_tool_calls$"
                                }
                              ]
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      },
                      {
                        "unique_name": "definition_activity_02EK4K4I7TX183fQH4CkuFhzZwRZ5IhVbwH",
                        "name": "Condition Branch",
                        "title": "OpenAi Request Failed And Retries Available",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": {
                              "left_operand": "$activity.definition_activity_02DCPN7ZMSHE53mGIST66lLNvtvPIiH2u2f.output.succeeded$",
                              "operator": "eq",
                              "right_operand": false
                            },
                            "operator": "and",
                            "right_operand": {
                              "left_operand": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.local.variable_workflow_02EK4JATH9EHF2PSKigI7bWK66u6IYft759$",
                              "operator": "gt",
                              "right_operand": 0
                            }
                          },
                          "continue_on_failure": false,
                          "display_name": "OpenAi Request Failed And Retries Available",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02EK4LRDXP38F2wiXTqsUQLGeHXRBCmair0",
                            "name": "Set Variables",
                            "title": "Decrease retry counter",
                            "type": "core.set_multiple_variables",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "display_name": "Decrease retry counter",
                              "skip_execution": false,
                              "variables_to_update": [
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.local.variable_workflow_02EK4JATH9EHF2PSKigI7bWK66u6IYft759$",
                                  "variable_value_new": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.local.variable_workflow_02EK4JATH9EHF2PSKigI7bWK66u6IYft759$ - 1"
                                }
                              ]
                            },
                            "object_type": "definition_activity"
                          },
                          {
                            "unique_name": "definition_activity_02EK4MB5ESDPW5qWwJhwsNKJmQnvwZc5p2r",
                            "name": "Sleep",
                            "title": "Sleep",
                            "type": "core.sleep",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "display_name": "Sleep",
                              "skip_execution": false,
                              "sleep_interval": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.local.variable_workflow_02EK4JM1T6LQ11pN82CxaX1RDHOkegZzhyh$"
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      },
                      {
                        "unique_name": "definition_activity_02EK4KTIEFYD465IeNtgzlVfNoiINY0FVJk",
                        "name": "Condition Branch",
                        "title": "OpenAi Request Failed And No Retries",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": {
                              "left_operand": "$activity.definition_activity_02DCPN7ZMSHE53mGIST66lLNvtvPIiH2u2f.output.succeeded$",
                              "operator": "eq",
                              "right_operand": false
                            },
                            "operator": "and",
                            "right_operand": {
                              "left_operand": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.local.variable_workflow_02EK4JATH9EHF2PSKigI7bWK66u6IYft759$",
                              "operator": "eq",
                              "right_operand": 0
                            }
                          },
                          "continue_on_failure": false,
                          "display_name": "OpenAi Request Failed And No Retries",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02EK4LCDMM08L64TzMGXDP58IynURj3F08v",
                            "name": "Completed",
                            "title": "Failed",
                            "type": "logic.completed",
                            "base_type": "activity",
                            "properties": {
                              "completion_type": "failed-completed",
                              "continue_on_failure": false,
                              "display_name": "Failed",
                              "result_message": "Error with OpenAI Request: $activity.definition_activity_02DCPN7ZMSHE53mGIST66lLNvtvPIiH2u2f.output.error.message$",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "categories": [
          "category_025W2J2HK90LP3gVw454IoXQ0Qd1anzcY85"
        ]
      }
    }
  ],
  "atomic_workflows": [
    "definition_workflow_024S5ENDCK1LP5V2CLbAh3WWV20RHOHieks"
  ],
  "dependent_workflows": [
    "definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk",
    "definition_workflow_024S5ENDCK1LP5V2CLbAh3WWV20RHOHieks"
  ],
  "module_targets": [
    {
      "module_type": "Cisco XDR",
      "external_id": "securex:ao:iroh_api",
      "target_id": "021ZQ24GKF0CY4CJU4qgAnkwe8gYNTiZim4"
    }
  ]
}